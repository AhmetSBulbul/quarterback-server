// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: courtpb.proto

package courtpb

import (
	commonpb "github.com/AhmetSBulbul/quarterback-server/pb/commonpb"
	regionpb "github.com/AhmetSBulbul/quarterback-server/pb/regionpb"
	userpb "github.com/AhmetSBulbul/quarterback-server/pb/userpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Court struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	District     *regionpb.District `protobuf:"bytes,3,opt,name=district,proto3" json:"district,omitempty"`
	Address      string             `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Location     *commonpb.Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Media        []*commonpb.Media  `protobuf:"bytes,6,rep,name=media,proto3" json:"media,omitempty"`
	CheckInCount int32              `protobuf:"varint,7,opt,name=checkInCount,proto3" json:"checkInCount,omitempty"`
	CommentCount int32              `protobuf:"varint,8,opt,name=commentCount,proto3" json:"commentCount,omitempty"`
}

func (x *Court) Reset() {
	*x = Court{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Court) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Court) ProtoMessage() {}

func (x *Court) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Court.ProtoReflect.Descriptor instead.
func (*Court) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{0}
}

func (x *Court) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Court) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Court) GetDistrict() *regionpb.District {
	if x != nil {
		return x.District
	}
	return nil
}

func (x *Court) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Court) GetLocation() *commonpb.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Court) GetMedia() []*commonpb.Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Court) GetCheckInCount() int32 {
	if x != nil {
		return x.CheckInCount
	}
	return 0
}

func (x *Court) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

type CourtCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourtId int32  `protobuf:"varint,1,opt,name=courtId,proto3" json:"courtId,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CourtCommentRequest) Reset() {
	*x = CourtCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtCommentRequest) ProtoMessage() {}

func (x *CourtCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtCommentRequest.ProtoReflect.Descriptor instead.
func (*CourtCommentRequest) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{1}
}

func (x *CourtCommentRequest) GetCourtId() int32 {
	if x != nil {
		return x.CourtId
	}
	return 0
}

func (x *CourtCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CourtComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CourtId int32        `protobuf:"varint,2,opt,name=courtId,proto3" json:"courtId,omitempty"`
	Sender  *userpb.User `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Content string       `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CourtComment) Reset() {
	*x = CourtComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtComment) ProtoMessage() {}

func (x *CourtComment) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtComment.ProtoReflect.Descriptor instead.
func (*CourtComment) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{2}
}

func (x *CourtComment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourtComment) GetCourtId() int32 {
	if x != nil {
		return x.CourtId
	}
	return 0
}

func (x *CourtComment) GetSender() *userpb.User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *CourtComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CourtCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourtId    int32                       `protobuf:"varint,1,opt,name=courtId,proto3" json:"courtId,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *CourtCommentListRequest) Reset() {
	*x = CourtCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtCommentListRequest) ProtoMessage() {}

func (x *CourtCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtCommentListRequest.ProtoReflect.Descriptor instead.
func (*CourtCommentListRequest) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{3}
}

func (x *CourtCommentListRequest) GetCourtId() int32 {
	if x != nil {
		return x.CourtId
	}
	return 0
}

func (x *CourtCommentListRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CourtCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments   []*CourtComment              `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	Pagination *commonpb.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *CourtCommentListResponse) Reset() {
	*x = CourtCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtCommentListResponse) ProtoMessage() {}

func (x *CourtCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtCommentListResponse.ProtoReflect.Descriptor instead.
func (*CourtCommentListResponse) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{4}
}

func (x *CourtCommentListResponse) GetComments() []*CourtComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *CourtCommentListResponse) GetPagination() *commonpb.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Get Court
type GetCourtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCourtRequest) Reset() {
	*x = GetCourtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourtRequest) ProtoMessage() {}

func (x *GetCourtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourtRequest.ProtoReflect.Descriptor instead.
func (*GetCourtRequest) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{5}
}

func (x *GetCourtRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CheckInCourtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckedIn bool  `protobuf:"varint,2,opt,name=checkedIn,proto3" json:"checkedIn,omitempty"`
}

func (x *CheckInCourtResponse) Reset() {
	*x = CheckInCourtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInCourtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInCourtResponse) ProtoMessage() {}

func (x *CheckInCourtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInCourtResponse.ProtoReflect.Descriptor instead.
func (*CheckInCourtResponse) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{6}
}

func (x *CheckInCourtResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckInCourtResponse) GetCheckedIn() bool {
	if x != nil {
		return x.CheckedIn
	}
	return false
}

type CourtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Court *Court `protobuf:"bytes,1,opt,name=court,proto3" json:"court,omitempty"`
}

func (x *CourtResponse) Reset() {
	*x = CourtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtResponse) ProtoMessage() {}

func (x *CourtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtResponse.ProtoReflect.Descriptor instead.
func (*CourtResponse) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{7}
}

func (x *CourtResponse) GetCourt() *Court {
	if x != nil {
		return x.Court
	}
	return nil
}

type ListCourtByLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   *commonpb.Location          `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCourtByLocationRequest) Reset() {
	*x = ListCourtByLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourtByLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourtByLocationRequest) ProtoMessage() {}

func (x *ListCourtByLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourtByLocationRequest.ProtoReflect.Descriptor instead.
func (*ListCourtByLocationRequest) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{8}
}

func (x *ListCourtByLocationRequest) GetLocation() *commonpb.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ListCourtByLocationRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchCourtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      *commonpb.Query             `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchCourtRequest) Reset() {
	*x = SearchCourtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCourtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCourtRequest) ProtoMessage() {}

func (x *SearchCourtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCourtRequest.ProtoReflect.Descriptor instead.
func (*SearchCourtRequest) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{9}
}

func (x *SearchCourtRequest) GetQuery() *commonpb.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SearchCourtRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CourtWithDistance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Court    *Court  `protobuf:"bytes,1,opt,name=court,proto3" json:"court,omitempty"`
	Distance float64 `protobuf:"fixed64,2,opt,name=distance,proto3" json:"distance,omitempty"`
}

func (x *CourtWithDistance) Reset() {
	*x = CourtWithDistance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtWithDistance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtWithDistance) ProtoMessage() {}

func (x *CourtWithDistance) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtWithDistance.ProtoReflect.Descriptor instead.
func (*CourtWithDistance) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{10}
}

func (x *CourtWithDistance) GetCourt() *Court {
	if x != nil {
		return x.Court
	}
	return nil
}

func (x *CourtWithDistance) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type CourtsWithDistance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courts     []*CourtWithDistance         `protobuf:"bytes,1,rep,name=courts,proto3" json:"courts,omitempty"`
	Pagination *commonpb.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *CourtsWithDistance) Reset() {
	*x = CourtsWithDistance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtsWithDistance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtsWithDistance) ProtoMessage() {}

func (x *CourtsWithDistance) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtsWithDistance.ProtoReflect.Descriptor instead.
func (*CourtsWithDistance) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{11}
}

func (x *CourtsWithDistance) GetCourts() []*CourtWithDistance {
	if x != nil {
		return x.Courts
	}
	return nil
}

func (x *CourtsWithDistance) GetPagination() *commonpb.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListCourtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courts     []*Court                     `protobuf:"bytes,1,rep,name=courts,proto3" json:"courts,omitempty"`
	Pagination *commonpb.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCourtResponse) Reset() {
	*x = ListCourtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courtpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourtResponse) ProtoMessage() {}

func (x *ListCourtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courtpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourtResponse.ProtoReflect.Descriptor instead.
func (*ListCourtResponse) Descriptor() ([]byte, []int) {
	return file_courtpb_proto_rawDescGZIP(), []int{12}
}

func (x *ListCourtResponse) GetCourts() []*Court {
	if x != nil {
		return x.Courts
	}
	return nil
}

func (x *ListCourtResponse) GetPagination() *commonpb.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_courtpb_proto protoreflect.FileDescriptor

var file_courtpb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x1a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x76, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x72,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x75,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x22, 0x33, 0x0a, 0x0d, 0x43,
	0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x72, 0x74,
	0x22, 0x85, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x42, 0x79,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53,
	0x0a, 0x11, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x75,
	0x72, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0xe8, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x74, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x74, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74,
	0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x6f,
	0x75, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_courtpb_proto_rawDescOnce sync.Once
	file_courtpb_proto_rawDescData = file_courtpb_proto_rawDesc
)

func file_courtpb_proto_rawDescGZIP() []byte {
	file_courtpb_proto_rawDescOnce.Do(func() {
		file_courtpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_courtpb_proto_rawDescData)
	})
	return file_courtpb_proto_rawDescData
}

var file_courtpb_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_courtpb_proto_goTypes = []interface{}{
	(*Court)(nil),                       // 0: court.Court
	(*CourtCommentRequest)(nil),         // 1: court.CourtCommentRequest
	(*CourtComment)(nil),                // 2: court.CourtComment
	(*CourtCommentListRequest)(nil),     // 3: court.CourtCommentListRequest
	(*CourtCommentListResponse)(nil),    // 4: court.CourtCommentListResponse
	(*GetCourtRequest)(nil),             // 5: court.GetCourtRequest
	(*CheckInCourtResponse)(nil),        // 6: court.CheckInCourtResponse
	(*CourtResponse)(nil),               // 7: court.CourtResponse
	(*ListCourtByLocationRequest)(nil),  // 8: court.ListCourtByLocationRequest
	(*SearchCourtRequest)(nil),          // 9: court.SearchCourtRequest
	(*CourtWithDistance)(nil),           // 10: court.CourtWithDistance
	(*CourtsWithDistance)(nil),          // 11: court.CourtsWithDistance
	(*ListCourtResponse)(nil),           // 12: court.ListCourtResponse
	(*regionpb.District)(nil),           // 13: region.District
	(*commonpb.Location)(nil),           // 14: common.Location
	(*commonpb.Media)(nil),              // 15: common.Media
	(*userpb.User)(nil),                 // 16: user.User
	(*commonpb.PaginationRequest)(nil),  // 17: common.PaginationRequest
	(*commonpb.PaginationResponse)(nil), // 18: common.PaginationResponse
	(*commonpb.Query)(nil),              // 19: common.Query
	(*commonpb.GetByIdRequest)(nil),     // 20: common.GetByIdRequest
}
var file_courtpb_proto_depIdxs = []int32{
	13, // 0: court.Court.district:type_name -> region.District
	14, // 1: court.Court.location:type_name -> common.Location
	15, // 2: court.Court.media:type_name -> common.Media
	16, // 3: court.CourtComment.sender:type_name -> user.User
	17, // 4: court.CourtCommentListRequest.pagination:type_name -> common.PaginationRequest
	2,  // 5: court.CourtCommentListResponse.comments:type_name -> court.CourtComment
	18, // 6: court.CourtCommentListResponse.pagination:type_name -> common.PaginationResponse
	0,  // 7: court.CourtResponse.court:type_name -> court.Court
	14, // 8: court.ListCourtByLocationRequest.location:type_name -> common.Location
	17, // 9: court.ListCourtByLocationRequest.pagination:type_name -> common.PaginationRequest
	19, // 10: court.SearchCourtRequest.query:type_name -> common.Query
	17, // 11: court.SearchCourtRequest.pagination:type_name -> common.PaginationRequest
	0,  // 12: court.CourtWithDistance.court:type_name -> court.Court
	10, // 13: court.CourtsWithDistance.courts:type_name -> court.CourtWithDistance
	18, // 14: court.CourtsWithDistance.pagination:type_name -> common.PaginationResponse
	0,  // 15: court.ListCourtResponse.courts:type_name -> court.Court
	18, // 16: court.ListCourtResponse.pagination:type_name -> common.PaginationResponse
	5,  // 17: court.CourtService.GetCourt:input_type -> court.GetCourtRequest
	8,  // 18: court.CourtService.ListCourtByLocation:input_type -> court.ListCourtByLocationRequest
	9,  // 19: court.CourtService.SearchCourt:input_type -> court.SearchCourtRequest
	0,  // 20: court.CourtService.CreateCourt:input_type -> court.Court
	20, // 21: court.CourtService.CheckInCourt:input_type -> common.GetByIdRequest
	1,  // 22: court.CourtService.AddComment:input_type -> court.CourtCommentRequest
	3,  // 23: court.CourtService.ListComment:input_type -> court.CourtCommentListRequest
	7,  // 24: court.CourtService.GetCourt:output_type -> court.CourtResponse
	11, // 25: court.CourtService.ListCourtByLocation:output_type -> court.CourtsWithDistance
	12, // 26: court.CourtService.SearchCourt:output_type -> court.ListCourtResponse
	7,  // 27: court.CourtService.CreateCourt:output_type -> court.CourtResponse
	6,  // 28: court.CourtService.CheckInCourt:output_type -> court.CheckInCourtResponse
	2,  // 29: court.CourtService.AddComment:output_type -> court.CourtComment
	4,  // 30: court.CourtService.ListComment:output_type -> court.CourtCommentListResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_courtpb_proto_init() }
func file_courtpb_proto_init() {
	if File_courtpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_courtpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Court); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInCourtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourtByLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCourtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtWithDistance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtsWithDistance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courtpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_courtpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_courtpb_proto_goTypes,
		DependencyIndexes: file_courtpb_proto_depIdxs,
		MessageInfos:      file_courtpb_proto_msgTypes,
	}.Build()
	File_courtpb_proto = out.File
	file_courtpb_proto_rawDesc = nil
	file_courtpb_proto_goTypes = nil
	file_courtpb_proto_depIdxs = nil
}
