// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: gamepb.proto

package gamepb

import (
	commonpb "github.com/AhmetSBulbul/quarterback-server/api/pb/commonpb"
	courtpb "github.com/AhmetSBulbul/quarterback-server/api/pb/courtpb"
	teampb "github.com/AhmetSBulbul/quarterback-server/api/pb/teampb"
	userpb "github.com/AhmetSBulbul/quarterback-server/api/pb/userpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Get Game
type GetGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{0}
}

func (x *GetGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

// List Games by Location
type ListGamesByLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   *commonpb.Location          `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListGamesByLocationRequest) Reset() {
	*x = ListGamesByLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesByLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesByLocationRequest) ProtoMessage() {}

func (x *ListGamesByLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesByLocationRequest.ProtoReflect.Descriptor instead.
func (*ListGamesByLocationRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{1}
}

func (x *ListGamesByLocationRequest) GetLocation() *commonpb.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ListGamesByLocationRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// List Games by User
type ListGamesByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32                       `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListGamesByUserRequest) Reset() {
	*x = ListGamesByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesByUserRequest) ProtoMessage() {}

func (x *ListGamesByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesByUserRequest.ProtoReflect.Descriptor instead.
func (*ListGamesByUserRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{2}
}

func (x *ListGamesByUserRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListGamesByUserRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// List Games by Court
type ListGamesByCourtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourtId    int32                       `protobuf:"varint,1,opt,name=courtId,proto3" json:"courtId,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListGamesByCourtRequest) Reset() {
	*x = ListGamesByCourtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesByCourtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesByCourtRequest) ProtoMessage() {}

func (x *ListGamesByCourtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesByCourtRequest.ProtoReflect.Descriptor instead.
func (*ListGamesByCourtRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{3}
}

func (x *ListGamesByCourtRequest) GetCourtId() int32 {
	if x != nil {
		return x.CourtId
	}
	return 0
}

func (x *ListGamesByCourtRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// List Games by Team
type ListGamesByTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     int32                       `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId,omitempty"`
	Pagination *commonpb.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListGamesByTeamRequest) Reset() {
	*x = ListGamesByTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesByTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesByTeamRequest) ProtoMessage() {}

func (x *ListGamesByTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesByTeamRequest.ProtoReflect.Descriptor instead.
func (*ListGamesByTeamRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{4}
}

func (x *ListGamesByTeamRequest) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *ListGamesByTeamRequest) GetPagination() *commonpb.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games      []*Game                      `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Pagination *commonpb.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListGamesResponse) Reset() {
	*x = ListGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesResponse) ProtoMessage() {}

func (x *ListGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesResponse.ProtoReflect.Descriptor instead.
func (*ListGamesResponse) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{5}
}

func (x *ListGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *ListGamesResponse) GetPagination() *commonpb.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Create game
type CreateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourtId int32 `protobuf:"varint,1,opt,name=courtId,proto3" json:"courtId,omitempty"`
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{6}
}

func (x *CreateGameRequest) GetCourtId() int32 {
	if x != nil {
		return x.CourtId
	}
	return 0
}

type CreateGameWithTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourtId    int32 `protobuf:"varint,1,opt,name=courtId,proto3" json:"courtId,omitempty"`
	AwayTeamId int32 `protobuf:"varint,2,opt,name=awayTeamId,proto3" json:"awayTeamId,omitempty"`
}

func (x *CreateGameWithTeamRequest) Reset() {
	*x = CreateGameWithTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameWithTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameWithTeamRequest) ProtoMessage() {}

func (x *CreateGameWithTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameWithTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateGameWithTeamRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{7}
}

func (x *CreateGameWithTeamRequest) GetCourtId() int32 {
	if x != nil {
		return x.CourtId
	}
	return 0
}

func (x *CreateGameWithTeamRequest) GetAwayTeamId() int32 {
	if x != nil {
		return x.AwayTeamId
	}
	return 0
}

type GameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *GameResponse) Reset() {
	*x = GameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResponse) ProtoMessage() {}

func (x *GameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResponse.ProtoReflect.Descriptor instead.
func (*GameResponse) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{8}
}

func (x *GameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

// Join Game
type JoinGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     int32 `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	IsHomeSide bool  `protobuf:"varint,2,opt,name=isHomeSide,proto3" json:"isHomeSide,omitempty"`
}

func (x *JoinGameRequest) Reset() {
	*x = JoinGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameRequest) ProtoMessage() {}

func (x *JoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameRequest.ProtoReflect.Descriptor instead.
func (*JoinGameRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{9}
}

func (x *JoinGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *JoinGameRequest) GetIsHomeSide() bool {
	if x != nil {
		return x.IsHomeSide
	}
	return false
}

// Start Game
type StartGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{10}
}

func (x *StartGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

// End Game
type EndGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId    int32 `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	HomeScore int32 `protobuf:"varint,2,opt,name=homeScore,proto3" json:"homeScore,omitempty"`
	AwayScore int32 `protobuf:"varint,3,opt,name=awayScore,proto3" json:"awayScore,omitempty"`
}

func (x *EndGameRequest) Reset() {
	*x = EndGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndGameRequest) ProtoMessage() {}

func (x *EndGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndGameRequest.ProtoReflect.Descriptor instead.
func (*EndGameRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{11}
}

func (x *EndGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *EndGameRequest) GetHomeScore() int32 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *EndGameRequest) GetAwayScore() int32 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

// Cancel Game
type CancelGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *CancelGameRequest) Reset() {
	*x = CancelGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelGameRequest) ProtoMessage() {}

func (x *CancelGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelGameRequest.ProtoReflect.Descriptor instead.
func (*CancelGameRequest) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{12}
}

func (x *CancelGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Court     *courtpb.Court `protobuf:"bytes,2,opt,name=court,proto3" json:"court,omitempty"`
	CreatedBy *userpb.User   `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// Types that are assignable to Status:
	//
	//	*Game_InProgress
	//	*Game_Started
	//	*Game_Ended
	Status isGame_Status `protobuf_oneof:"status"`
	// If [Game] is created by a team, then [teams] should be set
	// If [Game] has teams, that means it is a team game
	Teams       *Teams         `protobuf:"bytes,7,opt,name=teams,proto3,oneof" json:"teams,omitempty"`
	HomePlayers []*userpb.User `protobuf:"bytes,8,rep,name=homePlayers,proto3" json:"homePlayers,omitempty"`
	AwayPlayers []*userpb.User `protobuf:"bytes,9,rep,name=awayPlayers,proto3" json:"awayPlayers,omitempty"`
	CancelledBy []int32        `protobuf:"varint,10,rep,packed,name=cancelledBy,proto3" json:"cancelledBy,omitempty"` // Shoud we use int32 or user or new type something like player?
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{13}
}

func (x *Game) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Game) GetCourt() *courtpb.Court {
	if x != nil {
		return x.Court
	}
	return nil
}

func (x *Game) GetCreatedBy() *userpb.User {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (m *Game) GetStatus() isGame_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *Game) GetInProgress() *GameInProgress {
	if x, ok := x.GetStatus().(*Game_InProgress); ok {
		return x.InProgress
	}
	return nil
}

func (x *Game) GetStarted() *GameStarted {
	if x, ok := x.GetStatus().(*Game_Started); ok {
		return x.Started
	}
	return nil
}

func (x *Game) GetEnded() *GameEnded {
	if x, ok := x.GetStatus().(*Game_Ended); ok {
		return x.Ended
	}
	return nil
}

func (x *Game) GetTeams() *Teams {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *Game) GetHomePlayers() []*userpb.User {
	if x != nil {
		return x.HomePlayers
	}
	return nil
}

func (x *Game) GetAwayPlayers() []*userpb.User {
	if x != nil {
		return x.AwayPlayers
	}
	return nil
}

func (x *Game) GetCancelledBy() []int32 {
	if x != nil {
		return x.CancelledBy
	}
	return nil
}

type isGame_Status interface {
	isGame_Status()
}

type Game_InProgress struct {
	InProgress *GameInProgress `protobuf:"bytes,4,opt,name=inProgress,proto3,oneof"`
}

type Game_Started struct {
	Started *GameStarted `protobuf:"bytes,5,opt,name=started,proto3,oneof"`
}

type Game_Ended struct {
	Ended *GameEnded `protobuf:"bytes,6,opt,name=ended,proto3,oneof"`
}

func (*Game_InProgress) isGame_Status() {}

func (*Game_Started) isGame_Status() {}

func (*Game_Ended) isGame_Status() {}

// Game status
type GameInProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameInProgress) Reset() {
	*x = GameInProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInProgress) ProtoMessage() {}

func (x *GameInProgress) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInProgress.ProtoReflect.Descriptor instead.
func (*GameInProgress) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{14}
}

type GameStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
}

func (x *GameStarted) Reset() {
	*x = GameStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStarted) ProtoMessage() {}

func (x *GameStarted) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStarted.ProtoReflect.Descriptor instead.
func (*GameStarted) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{15}
}

func (x *GameStarted) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type GameEnded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	EndedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	HomeScore int32                  `protobuf:"varint,3,opt,name=homeScore,proto3" json:"homeScore,omitempty"`
	AwayScore int32                  `protobuf:"varint,4,opt,name=awayScore,proto3" json:"awayScore,omitempty"`
}

func (x *GameEnded) Reset() {
	*x = GameEnded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEnded) ProtoMessage() {}

func (x *GameEnded) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEnded.ProtoReflect.Descriptor instead.
func (*GameEnded) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{16}
}

func (x *GameEnded) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *GameEnded) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *GameEnded) GetHomeScore() int32 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *GameEnded) GetAwayScore() int32 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

type Teams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeTeam *teampb.Team `protobuf:"bytes,1,opt,name=homeTeam,proto3" json:"homeTeam,omitempty"`
	AwayTeam *teampb.Team `protobuf:"bytes,2,opt,name=awayTeam,proto3" json:"awayTeam,omitempty"`
}

func (x *Teams) Reset() {
	*x = Teams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamepb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Teams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Teams) ProtoMessage() {}

func (x *Teams) ProtoReflect() protoreflect.Message {
	mi := &file_gamepb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Teams.ProtoReflect.Descriptor instead.
func (*Teams) Descriptor() ([]byte, []int) {
	return file_gamepb_proto_rawDescGZIP(), []int{17}
}

func (x *Teams) GetHomeTeam() *teampb.Team {
	if x != nil {
		return x.HomeTeam
	}
	return nil
}

func (x *Teams) GetAwayTeam() *teampb.Team {
	if x != nil {
		return x.AwayTeam
	}
	return nil
}

var File_gamepb_proto protoreflect.FileDescriptor

var file_gamepb_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x6e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x75, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x6b, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x22, 0x55,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x77, 0x61, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x64, 0x65,
	0x22, 0x2a, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x0e,
	0x45, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0xae, 0x03, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x48, 0x01, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x0b,
	0x61, 0x77, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x61,
	0x77, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73,
	0x22, 0x10, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x47, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6d,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f,
	0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x77, 0x61, 0x79,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x57, 0x0a, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x26,
	0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x83,
	0x06, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x75, 0x72, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x45,
	0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x6e,
	0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gamepb_proto_rawDescOnce sync.Once
	file_gamepb_proto_rawDescData = file_gamepb_proto_rawDesc
)

func file_gamepb_proto_rawDescGZIP() []byte {
	file_gamepb_proto_rawDescOnce.Do(func() {
		file_gamepb_proto_rawDescData = protoimpl.X.CompressGZIP(file_gamepb_proto_rawDescData)
	})
	return file_gamepb_proto_rawDescData
}

var file_gamepb_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_gamepb_proto_goTypes = []interface{}{
	(*GetGameRequest)(nil),              // 0: game.GetGameRequest
	(*ListGamesByLocationRequest)(nil),  // 1: game.ListGamesByLocationRequest
	(*ListGamesByUserRequest)(nil),      // 2: game.ListGamesByUserRequest
	(*ListGamesByCourtRequest)(nil),     // 3: game.ListGamesByCourtRequest
	(*ListGamesByTeamRequest)(nil),      // 4: game.ListGamesByTeamRequest
	(*ListGamesResponse)(nil),           // 5: game.ListGamesResponse
	(*CreateGameRequest)(nil),           // 6: game.CreateGameRequest
	(*CreateGameWithTeamRequest)(nil),   // 7: game.CreateGameWithTeamRequest
	(*GameResponse)(nil),                // 8: game.GameResponse
	(*JoinGameRequest)(nil),             // 9: game.JoinGameRequest
	(*StartGameRequest)(nil),            // 10: game.StartGameRequest
	(*EndGameRequest)(nil),              // 11: game.EndGameRequest
	(*CancelGameRequest)(nil),           // 12: game.CancelGameRequest
	(*Game)(nil),                        // 13: game.Game
	(*GameInProgress)(nil),              // 14: game.GameInProgress
	(*GameStarted)(nil),                 // 15: game.GameStarted
	(*GameEnded)(nil),                   // 16: game.GameEnded
	(*Teams)(nil),                       // 17: game.Teams
	(*commonpb.Location)(nil),           // 18: common.Location
	(*commonpb.PaginationRequest)(nil),  // 19: common.PaginationRequest
	(*commonpb.PaginationResponse)(nil), // 20: common.PaginationResponse
	(*courtpb.Court)(nil),               // 21: court.Court
	(*userpb.User)(nil),                 // 22: user.User
	(*timestamppb.Timestamp)(nil),       // 23: google.protobuf.Timestamp
	(*teampb.Team)(nil),                 // 24: team.Team
	(*commonpb.File)(nil),               // 25: common.File
	(*commonpb.Media)(nil),              // 26: common.Media
}
var file_gamepb_proto_depIdxs = []int32{
	18, // 0: game.ListGamesByLocationRequest.location:type_name -> common.Location
	19, // 1: game.ListGamesByLocationRequest.pagination:type_name -> common.PaginationRequest
	19, // 2: game.ListGamesByUserRequest.pagination:type_name -> common.PaginationRequest
	19, // 3: game.ListGamesByCourtRequest.pagination:type_name -> common.PaginationRequest
	19, // 4: game.ListGamesByTeamRequest.pagination:type_name -> common.PaginationRequest
	13, // 5: game.ListGamesResponse.games:type_name -> game.Game
	20, // 6: game.ListGamesResponse.pagination:type_name -> common.PaginationResponse
	13, // 7: game.GameResponse.game:type_name -> game.Game
	21, // 8: game.Game.court:type_name -> court.Court
	22, // 9: game.Game.createdBy:type_name -> user.User
	14, // 10: game.Game.inProgress:type_name -> game.GameInProgress
	15, // 11: game.Game.started:type_name -> game.GameStarted
	16, // 12: game.Game.ended:type_name -> game.GameEnded
	17, // 13: game.Game.teams:type_name -> game.Teams
	22, // 14: game.Game.homePlayers:type_name -> user.User
	22, // 15: game.Game.awayPlayers:type_name -> user.User
	23, // 16: game.GameStarted.startedAt:type_name -> google.protobuf.Timestamp
	23, // 17: game.GameEnded.startedAt:type_name -> google.protobuf.Timestamp
	23, // 18: game.GameEnded.endedAt:type_name -> google.protobuf.Timestamp
	24, // 19: game.Teams.homeTeam:type_name -> team.Team
	24, // 20: game.Teams.awayTeam:type_name -> team.Team
	0,  // 21: game.GameService.GetGame:input_type -> game.GetGameRequest
	1,  // 22: game.GameService.ListGamesByLocation:input_type -> game.ListGamesByLocationRequest
	2,  // 23: game.GameService.ListGamesByUser:input_type -> game.ListGamesByUserRequest
	3,  // 24: game.GameService.ListGamesByCourt:input_type -> game.ListGamesByCourtRequest
	4,  // 25: game.GameService.ListGamesByTeam:input_type -> game.ListGamesByTeamRequest
	6,  // 26: game.GameService.CreateGame:input_type -> game.CreateGameRequest
	7,  // 27: game.GameService.CreateGameWithTeam:input_type -> game.CreateGameWithTeamRequest
	9,  // 28: game.GameService.JoinGame:input_type -> game.JoinGameRequest
	10, // 29: game.GameService.StartGame:input_type -> game.StartGameRequest
	11, // 30: game.GameService.EndGame:input_type -> game.EndGameRequest
	12, // 31: game.GameService.CancelGame:input_type -> game.CancelGameRequest
	25, // 32: game.GameService.AddMedia:input_type -> common.File
	8,  // 33: game.GameService.GetGame:output_type -> game.GameResponse
	5,  // 34: game.GameService.ListGamesByLocation:output_type -> game.ListGamesResponse
	5,  // 35: game.GameService.ListGamesByUser:output_type -> game.ListGamesResponse
	5,  // 36: game.GameService.ListGamesByCourt:output_type -> game.ListGamesResponse
	5,  // 37: game.GameService.ListGamesByTeam:output_type -> game.ListGamesResponse
	8,  // 38: game.GameService.CreateGame:output_type -> game.GameResponse
	8,  // 39: game.GameService.CreateGameWithTeam:output_type -> game.GameResponse
	8,  // 40: game.GameService.JoinGame:output_type -> game.GameResponse
	8,  // 41: game.GameService.StartGame:output_type -> game.GameResponse
	8,  // 42: game.GameService.EndGame:output_type -> game.GameResponse
	8,  // 43: game.GameService.CancelGame:output_type -> game.GameResponse
	26, // 44: game.GameService.AddMedia:output_type -> common.Media
	33, // [33:45] is the sub-list for method output_type
	21, // [21:33] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_gamepb_proto_init() }
func file_gamepb_proto_init() {
	if File_gamepb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gamepb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesByLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesByCourtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesByTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameWithTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEnded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamepb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Teams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gamepb_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Game_InProgress)(nil),
		(*Game_Started)(nil),
		(*Game_Ended)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gamepb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gamepb_proto_goTypes,
		DependencyIndexes: file_gamepb_proto_depIdxs,
		MessageInfos:      file_gamepb_proto_msgTypes,
	}.Build()
	File_gamepb_proto = out.File
	file_gamepb_proto_rawDesc = nil
	file_gamepb_proto_goTypes = nil
	file_gamepb_proto_depIdxs = nil
}
